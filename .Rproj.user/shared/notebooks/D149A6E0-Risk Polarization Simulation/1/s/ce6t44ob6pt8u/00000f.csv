"0",""
"0","population <- 10^5"
"0","prop_minority <- .02"
"0",""
"0","# Create a grid of parameters"
"0","beta_param <- data.frame( param_1 = c( 2, .1),"
"0","            param_2 = c(.6, .1))"
"0","# set the seed, so everything here is replicable"
"0","set.seed(42)"
"0",""
"0","# Generate random data from beta distributions with different parameters"
"0","data <- map2(beta_param$param_1, beta_param$param_2, ~ rbeta(population, .x, .y))"
"0",""
"0","df <- as.data.frame(data)"
"0",""
"0","colnames(df) <- 1:nrow(beta_param)"
"0","df <- as.data.frame(t(df))"
"0",""
"0","#create normal distribution, and additionally one where we combine combining 2 normal distributions"
"0","normal_para <- data.frame(param_1 = c(.5, 0),"
"0","                          param_2 = c(.15, .1))"
"0",""
"0","parameters <- rbind(beta_param, normal_para)"
"0",""
"0","additional_param <- data.frame(param_3 = c(rep(0,nrow(beta_param)), 0, 1),"
"0","                               param_4 = c(rep(0,nrow(beta_param)), 0, .01))"
"0",""
"0","#normal distribution"
"0","vec <- c()"
"0","i = 1"
"0","while (i <= population){"
"0","   a = rnorm(1, mean = normal_para$param_1[1], sd = normal_para$param_2[1])"
"0","   if (a <= 1 && a >= 0){"
"0","      vec[i] <- a"
"0","      i = i + 1"
"0","   }"
"0","}"
"0",""
"0","normal_distr <- as.data.frame(t(vec))"
"0",""
"0","#combined normal distribution"
"0","vec <- c()"
"0","i = 1"
"0","while (i <= population * (1- prop_minority)){"
"0","   a = rnorm(1, mean = parameters$param_1[nrow(parameters)], sd = parameters$param_2[nrow(parameters)])"
"0","   if (a >= 0){"
"0","      vec[i] <- a"
"0","      i = i + 1"
"0","   }"
"0","}"
"0",""
"0","vec1 <- as.data.frame(vec)"
"0",""
"0","vec <- c()"
"0","i = 1"
"0","while (i <= population* prop_minority){"
"0","   a = rnorm(1, mean = additional_param$param_3[nrow(additional_param)], sd = additional_param$param_4[nrow(additional_param)])"
"0","   if (a <= 1){"
"0","      vec[i] <- a"
"0","      i = i + 1"
"0","   }"
"0","}"
"0",""
"0","vec2 <- as.data.frame(vec)"
"0",""
"0","combined_distr <- as.data.frame(t(rbind(vec1,vec2)))"
"0",""
"0",""
"0","df <- rbind(df, normal_distr, combined_distr)"
"0",""
"0","#create the different functions so we can calculate the polarization measures, which is needed for the next step"
"0","calculate_skewness <- function(column) {"
"0","   result <- describe(column, skew = TRUE)"
"0","   return(result$skew)"
"0","}"
"0",""
"0","calculate_kurtosis <- function(column) {"
"0","   result <- describe(column)"
"0","   return(result$kurtosi)"
"0","}"
"0",""
"0","calculate_n <- function(column) {"
"0","   result <-  sum(!is.na(column))"
"0","}"
"0",""
"0","#calculate new vectors for each risk distribution, and add them to the dataframe"
"0","skew<-apply(df, 1,  calculate_skewness)"
"0","kurtosis <- apply(df, 1, calculate_kurtosis)"
"0",""
"0",""
"0","df2 <- cbind(parameters, additional_param, df, skew, kurtosis)  %>% as.data.frame() %>% "
"0","   pivot_longer(cols = starts_with(""V""), names_to = ""variant"", values_to = ""values"") %>% "
"0","   mutate(param_1 = as.numeric(param_1),"
"0","          param_2 = as.numeric(param_2),"
"0","          Parameters = factor(paste(param_1, param_2, sep = ""-""))) %>% "
"0","   group_by(param_1,param_2, param_3, param_4) %>% "
"0","   mutate(n = n(),"
"0","          ID = cur_group_id())"
"0",""
"0","#calculate the bimodial coefficient according to Fischer & Frey"
"0","df2 <-  df2 %>% mutate(bimod_coeff = (skew^2+1)/ (kurtosis + ((3*((n-1))^2)/((n-2)*(n-3)))))"
"0",""
"0",""
"0","BC_annotation <- df2 %>% "
"0","   group_by(param_1,param_2, param_3, param_4) %>% "
"0","   distinct(Parameters,bimod_coeff) %>% "
"0","   arrange(bimod_coeff)"
"0",""
"0","# create color vector, so each color is easy to distinguish for those groups"
"0","colors <- brewer.pal(4, ""Dark2"")"
"0",""
"0","df2$Parameters <- reorder(df2$Parameters, df2$bimod_coeff)"
"0",""
"0",""
"0","#order is: normal distribution first, then beta skewed, mixed, then beta symmetric"
"0","# levels(df2$Parameters)"
"0",""
"0","#create the plot"
"0","df2 %>% ggplot(aes(values, col = Parameters))+"
"0","   geom_density(linewidth = 1.1) +"
"0","   theme_minimal()+"
"0","   scale_color_manual(values = colors)+"
"0","   annotate(""text"", x = .5, y = 7, col = colors[1], size = 6, label = str_c(""M = "",BC_annotation$param_1[1],"
"0","                                                                              "", SD = "", BC_annotation$param_2[1],"
"0","                                                                              "", BC = "", round(BC_annotation$bimod_coeff[1], 2)))+"
"0","   annotate(""text"", x= .5, y = 6,col = colors[3], size = 6, label = str_c(""M = "", BC_annotation$param_1[3], ""; "", BC_annotation$param_3[3],"
"0","                                                                            "", SD = "", BC_annotation$param_2[3], ""; "", BC_annotation$param_4[3],"
"0","                                                                            "", BC = "", round(BC_annotation$bimod_coeff[3], 2)))+"
"0","   annotate(""text"", x= .5, y = 5,col = colors[2], size = 6, label = str_c(""Alpha = "", BC_annotation$param_1[2],"
"0","                                                                            "", "" ,""Beta = "", BC_annotation$param_2[2],"
"0","                                                                            "", "", ""BC = "", round(BC_annotation$bimod_coeff[2], 2)))+"
"0","   annotate(""text"", x= .5, y = 4 ,col = colors[4], size = 6, label = str_c(""Alpha = "", BC_annotation$param_1[4],"
"0","                                                                            "", "" ,""Beta = "", BC_annotation$param_2[4],"
"0","                                                                            "", "", ""BC = "", round(BC_annotation$bimod_coeff[4], 2)))+"
"0","   theme(legend.position = ""none"")+"
"0","   ylab(""Density"")+"
"0","   xlab(""Value"")"
"0",""
